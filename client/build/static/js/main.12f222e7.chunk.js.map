{"version":3,"sources":["serviceWorker.ts","config.ts","auth/Auth.ts","components/Callback.tsx","components/LogIn.tsx","components/NotFound.tsx","api/blogs.ts","components/common/BlogItem.tsx","components/Blogs.tsx","components/MyBlogs.tsx","components/EditBlog.tsx","components/NewBlog.tsx","components/BlogView.tsx","App.tsx","routing.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","apiEndpoint","authConfig","domain","clientId","callbackUrl","origin","Auth","history","accessToken","idToken","expiresAt","auth0","WebAuth","clientID","redirectUri","responseType","scope","this","login","bind","logout","handleAuthentication","isAuthenticated","getAccessToken","getIdToken","renewSession","localStorage","getItem","authorize","parseHash","err","authResult","console","log","setSession","replace","alert","error","expiresIn","Date","getTime","setItem","toString","checkSession","error_description","removeItem","returnTo","Number","Callback","Dimmer","active","Loader","content","LogIn","onLogin","props","auth","Container","style","textAlign","React","NotFound","getBlogs","a","Axios","get","headers","Authorization","response","data","items","getMyBlogs","getBlog","blogId","item","getMyBlog","deleteMyBlog","delete","createBlog","blog","image","post","imageUploadUrl","blogImageUploadUrl","updateBlogImage","updateBlog","blogRequest","patch","getUpdateImageUrl","url","put","BlogItem","deleteBlog","myBlog","useHistory","Item","onClick","push","cursor","Image","size","src","imageUrl","now","rounded","className","Content","verticalAlign","Header","as","lineHeight","fontSize","heading","Meta","description","Extra","display","authorName","timeToRead","Button","floated","event","stopPropagation","color","Blogs","state","blogs","loadingBlogs","setState","message","renderBlogs","renderLoading","Group","map","key","Grid","Row","indeterminate","inline","MyBlogs","filter","handleDeleteBlog","EditBlog","NaN","success","loadingBlog","loadingMessage","componentDidMount","params","updateImageUrl","contentState","convertFromRaw","editorState","EditorState","createWithContent","handleInputChange","currentTarget","name","value","handleFileChange","imageFile","onEditorStateChange","handleSubmit","convertToRaw","getCurrentContent","undefined","margin","Form","warning","Field","required","onChange","placeholder","TextArea","label","type","alignItems","width","htmlFor","id","files","toolbarClassName","wrapperClassName","editorClassName","editorStyle","border","minHeight","padding","Message","header","hidden","list","NewBlog","loading","BlogView","userBlog","renderBlog","updatedAt","toLocaleString","timeStyle","dateStyle","marginTop","fontWeight","marginBottom","flexWrap","fluid","centered","objectFit","height","ReactHtmlParser","draftToHtml","App","handleLogin","handleLogout","generateMenu","generateCurrentPage","Segment","inverted","borderRadius","Menu","secondary","to","exact","activeClassName","position","paddingBottom","path","render","component","Component","createHistory","ReactDOM","test","hash","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.12f222e7.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","// TODO: Once your application is deployed, copy an API id here so that the frontend could interact with it\nexport const apiEndpoint = `https://blog-api.kartikbhalla.dev`\n// export const apiEndpoint = `localhost:3000/dev`\n\nexport const authConfig = {\n  // TODO: Create an Auth0 application and copy values from it into this map\n  domain: 'dev-gg9z0y7i.us.auth0.com', // Auth0 domain\n  clientId: 'm2QIn0r3RzS9JyfJeNwW4aP8M2SrVY1a', // Auth0 client id\n  callbackUrl: `${window.location.origin}/callback`\n}\n","import auth0 from 'auth0-js'\nimport { authConfig } from '../config'\n\nexport default class Auth {\n  accessToken: any\n  idToken: any\n  expiresAt: any\n  history: any\n\n  auth0 = new auth0.WebAuth({\n    domain: authConfig.domain,\n    clientID: authConfig.clientId,\n    redirectUri: authConfig.callbackUrl,\n    responseType: 'token id_token',\n    scope: 'openid'\n  })\n\n  constructor(history: any) {\n    this.history = history\n\n    this.login = this.login.bind(this)\n    this.logout = this.logout.bind(this)\n    this.handleAuthentication = this.handleAuthentication.bind(this)\n    this.isAuthenticated = this.isAuthenticated.bind(this)\n    this.getAccessToken = this.getAccessToken.bind(this)\n    this.getIdToken = this.getIdToken.bind(this)\n    this.renewSession = this.renewSession.bind(this)\n    this.idToken = localStorage.getItem('idToken')\n  }\n\n  login() {\n    this.auth0.authorize()\n  }\n\n  handleAuthentication() {\n    this.auth0.parseHash((err: any, authResult: any) => {\n      if (authResult && authResult.accessToken && authResult.idToken) {\n        console.log('Access token: ', authResult.accessToken)\n        console.log('id token: ', authResult.idToken)\n        this.setSession(authResult)\n      } else if (err) {\n        this.history.replace('/')\n        console.log(err)\n        alert(`Error: ${err.error}. Check the console for further details.`)\n      }\n    })\n  }\n\n  getAccessToken() {\n    return this.accessToken\n  }\n\n  getIdToken() {\n    // return this.idToken;\n    return localStorage.getItem('idToken') as string\n  }\n\n  setSession(authResult: any) {\n    // Set isLoggedIn flag in localStorage\n    let expiresAt = authResult.expiresIn * 1000 + new Date().getTime()\n\n    localStorage.setItem('isLoggedIn', 'true')\n    localStorage.setItem('idToken', authResult.idToken)\n    localStorage.setItem('expiresAt', expiresAt.toString())\n\n    // Set the time that the access token will expire at\n    this.accessToken = authResult.accessToken\n    this.idToken = authResult.idToken\n    this.expiresAt = expiresAt\n\n    // navigate to the home route\n    this.history.replace('/')\n  }\n\n  renewSession() {\n    this.auth0.checkSession({}, (err: any, authResult: any) => {\n      if (authResult && authResult.accessToken && authResult.idToken) {\n        this.setSession(authResult)\n      } else if (err) {\n        this.logout()\n        console.log(err)\n        alert(\n          `Could not get a new token (${err.error}: ${err.error_description}).`\n        )\n      }\n    })\n  }\n\n  logout() {\n    // Remove tokens and expiry time\n    this.accessToken = null\n    this.idToken = null\n    this.expiresAt = 0\n\n    // Remove isLoggedIn flag from localStorage\n    localStorage.removeItem('isLoggedIn')\n\n    localStorage.removeItem('idToken')\n    localStorage.removeItem('expiresAt')\n\n    this.auth0.logout({\n      returnTo: window.location.origin\n    })\n\n    // navigate to the home route\n    this.history.replace('/')\n  }\n\n  isAuthenticated() {\n    // Check whether the current time is past the\n    // access token's expiry time\n    let expiresAt = Number(localStorage.getItem('expiresAt'))\n    return new Date().getTime() < expiresAt\n  }\n}\n","import React from 'react'\r\nimport { Dimmer, Loader } from 'semantic-ui-react'\r\n\r\nfunction Callback() {\r\n  return (\r\n    <Dimmer active>\r\n      <Loader content=\"Loading\" />\r\n    </Dimmer>\r\n  )\r\n}\r\n\r\nexport default Callback\r\n","import * as React from 'react'\nimport Auth from '../auth/Auth'\nimport { Container } from 'semantic-ui-react'\n\ninterface LogInProps {\n  auth: Auth\n}\n\ninterface LogInState {}\n\nexport class LogIn extends React.PureComponent<LogInProps, LogInState> {\n  onLogin = () => {\n    this.props.auth.login()\n  }\n\n  render() {\n    return (\n      <Container\n        style={{\n          textAlign: 'center'\n        }}\n      >\n        <h1>You need to login in order to continue</h1>\n      </Container>\n    )\n  }\n}\n","import * as React from 'react'\nimport { Container } from 'semantic-ui-react'\n\ninterface NotFoundProps {}\n\ninterface NotFoundState {}\n\nexport class NotFound extends React.PureComponent<\n  NotFoundProps,\n  NotFoundState\n> {\n  render() {\n    return (\n      <Container>\n        <h1 style={{ textAlign: 'center' }}>Not Found</h1>\n      </Container>\n    )\n  }\n}\n","import Axios from 'axios'\nimport { apiEndpoint } from '../config'\nimport { Blog, BlogListView } from './../types/Blog'\nimport { BlogRequest } from './../types/BlogRequest'\n\nexport async function getBlogs(idToken: string): Promise<BlogListView[]> {\n  console.log('Fetching blogs')\n\n  const response = await Axios.get(`${apiEndpoint}/blogs`, {\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${idToken}`\n    }\n  })\n  console.log('Blogs:', response.data)\n  return response.data.items\n}\n\nexport async function getMyBlogs(idToken: string): Promise<BlogListView[]> {\n  console.log('Fetching my blogs')\n\n  const response = await Axios.get(`${apiEndpoint}/blogs?self=true`, {\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${idToken}`\n    }\n  })\n  console.log('My Blogs:', response.data)\n  return response.data.items\n}\n\nexport async function getBlog(idToken: string, blogId: string): Promise<Blog> {\n  console.log('Fetching blog with id: ', blogId)\n\n  const response = await Axios.get(`${apiEndpoint}/blogs/${blogId}`, {\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${idToken}`\n    }\n  })\n  console.log('Blog:', response.data)\n  return response.data.item\n}\nexport async function getMyBlog(\n  idToken: string,\n  blogId: string\n): Promise<Blog> {\n  console.log('Fetching my blog with id: ', blogId)\n\n  const response = await Axios.get(`${apiEndpoint}/blogs/${blogId}?self=true`, {\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${idToken}`\n    }\n  })\n  console.log('Blog:', response.data)\n  return response.data.item as Blog\n}\n\nexport async function deleteMyBlog(\n  idToken: string,\n  blogId: string\n): Promise<BlogListView> {\n  console.log('Deleting a blog with id: ', blogId)\n\n  const response = await Axios.delete(`${apiEndpoint}/blogs/${blogId}`, {\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${idToken}`\n    }\n  })\n  console.log('Deleted Blog:', response.data)\n  return response.data.item as BlogListView\n}\n\nexport async function createBlog(\n  idToken: string,\n  blog: BlogRequest,\n  image: File\n): Promise<BlogListView> {\n  console.log('Creating a new blog!', blog)\n\n  const response = await Axios.post(`${apiEndpoint}/blogs`, blog, {\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${idToken}`\n    }\n  })\n  console.log('Created Blog: ', response.data)\n\n  const imageUploadUrl: string = response.data.item.blogImageUploadUrl\n  await updateBlogImage(imageUploadUrl, image)\n\n  return response.data.item as BlogListView\n}\nexport async function updateBlog(\n  idToken: string,\n  blogId: string,\n  blogRequest: BlogRequest\n): Promise<BlogListView[]> {\n  console.log('Updating a blog with id:', blogId)\n\n  const response = await Axios.patch(\n    `${apiEndpoint}/blogs/${blogId}`,\n    blogRequest,\n    {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${idToken}`\n      }\n    }\n  )\n  console.log('Updated Blog: ', response.data)\n\n  return response.data.item\n}\n\nexport async function getUpdateImageUrl(\n  idToken: string,\n  blogId: string\n): Promise<string> {\n  console.log('Getting update image url for blogId: ', blogId)\n\n  const response = await Axios.get(\n    `${apiEndpoint}/blogs/updateImageUrl/${blogId}`,\n    {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${idToken}`\n      }\n    }\n  )\n  console.log('image url: ', response.data)\n\n  return response.data.url as string\n}\n\nexport async function updateBlogImage(imageUploadUrl: string, image: File) {\n  await Axios.put(imageUploadUrl, image)\n}\n","import * as React from 'react'\nimport { Item, Button } from 'semantic-ui-react'\nimport { BlogListView } from './../../types/Blog'\nimport { useHistory } from 'react-router'\n\nexport interface BlogItemProps {\n  blog: BlogListView\n  myBlog?: boolean\n  deleteBlog?: (blogId: string) => void\n}\n\nconst BlogItem: React.FC<BlogItemProps> = ({ blog, deleteBlog, myBlog }) => {\n  const history = useHistory()\n  return (\n    <Item\n      onClick={() => {\n        if (myBlog) history.push(`/my-blogs/${blog.blogId}`)\n        else history.push(`/blogs/${blog.blogId}`)\n      }}\n      style={{ cursor: 'pointer' }}\n    >\n      <Item.Image\n        size=\"small\"\n        src={`${blog.imageUrl}?${Date.now()}`}\n        rounded\n        className=\"blog-image\"\n      />\n      <Item.Content verticalAlign=\"middle\">\n        <Item.Header\n          as=\"a\"\n          style={{ lineHeight: '2.5rem', fontSize: '1.8rem' }}\n        >\n          {blog.heading}\n        </Item.Header>\n        <Item.Meta style={{ lineHeight: '1.8rem', fontSize: '1.2rem' }}>\n          {blog.description}\n        </Item.Meta>\n        <Item.Extra style={{ display: 'flex' }}>\n          <div>By {blog.authorName}</div>\n          <div> • </div>\n          <div>{blog.timeToRead} min</div>\n        </Item.Extra>\n        <Item.Extra style={{ display: 'flex' }}>\n          {myBlog && (\n            <div>\n              <Button\n                floated=\"left\"\n                onClick={(event) => {\n                  event.stopPropagation()\n                  history.push(`/my-blogs/edit/${blog.blogId}`)\n                }}\n              >\n                EDIT BLOG\n              </Button>\n\n              <Button\n                floated=\"left\"\n                color=\"red\"\n                onClick={(event) => {\n                  event.stopPropagation()\n                  deleteBlog && deleteBlog(blog.blogId)\n                }}\n              >\n                DELETE BLOG\n              </Button>\n            </div>\n          )}\n        </Item.Extra>\n      </Item.Content>\n    </Item>\n  )\n}\n\nexport default BlogItem\n","import * as React from 'react'\nimport { getBlogs } from '../api/blogs'\nimport Auth from '../auth/Auth'\nimport { History } from 'history'\nimport { Header, Container, Grid, Loader, Item } from 'semantic-ui-react'\nimport { BlogListView } from './../types/Blog'\nimport BlogItem from './common/BlogItem'\n\nexport interface BlogsProps {\n  auth: Auth\n  history: History\n}\n\nexport interface BlogsState {\n  blogs: BlogListView[]\n  loadingBlogs: boolean\n}\n\nclass Blogs extends React.Component<BlogsProps, BlogsState> {\n  state = { blogs: [], loadingBlogs: true }\n\n  async componentDidMount() {\n    try {\n      const blogs = await getBlogs(this.props.auth.getIdToken())\n      this.setState({\n        blogs,\n        loadingBlogs: false\n      })\n    } catch (e) {\n      alert(`Failed to fetch blogs: ${e.message}`)\n    }\n  }\n\n  render() {\n    return (\n      <Container>\n        <Header as=\"h1\">Blogs</Header>\n        {this.renderBlogs()}\n      </Container>\n    )\n  }\n\n  renderBlogs() {\n    if (this.state.loadingBlogs) {\n      return this.renderLoading()\n    }\n\n    return (\n      <Item.Group>\n        {this.state.blogs.map((blog, key) => (\n          <BlogItem blog={blog} key={key} />\n        ))}\n      </Item.Group>\n    )\n  }\n\n  renderLoading() {\n    return (\n      <Grid.Row>\n        <Loader indeterminate active inline=\"centered\">\n          Loading Blogs\n        </Loader>\n      </Grid.Row>\n    )\n  }\n}\n\nexport default Blogs\n","import * as React from 'react'\nimport { deleteMyBlog, getMyBlogs } from '../api/blogs'\nimport Auth from '../auth/Auth'\nimport { BlogListView } from './../types/Blog'\nimport { Header, Container, Grid, Loader, Item } from 'semantic-ui-react'\nimport BlogItem from './common/BlogItem'\nimport { History } from 'history'\n\nexport interface MyBlogsProps {\n  auth: Auth\n  history: History\n}\n\nexport interface MyBlogsState {\n  blogs: BlogListView[]\n  loadingBlogs: boolean\n}\n\nclass MyBlogs extends React.Component<MyBlogsProps, MyBlogsState> {\n  state: MyBlogsState = { blogs: [], loadingBlogs: true }\n\n  async componentDidMount() {\n    try {\n      const blogs = await getMyBlogs(this.props.auth.getIdToken())\n      this.setState({\n        blogs,\n        loadingBlogs: false\n      })\n    } catch (e) {\n      alert(`Failed to fetch my blogs: ${e.message}`)\n    }\n  }\n\n  async handleDeleteBlog(blogId: string) {\n    await deleteMyBlog(this.props.auth.getIdToken(), blogId)\n    this.setState({\n      blogs: this.state.blogs.filter((blog) => blog.blogId !== blogId)\n    })\n  }\n\n  render() {\n    return (\n      <Container>\n        <Header as=\"h1\">My Blogs</Header>\n\n        {/* {this.renderCreateTodoInput()} */}\n\n        {this.renderBlogs()}\n      </Container>\n    )\n  }\n\n  renderBlogs() {\n    if (this.state.loadingBlogs) {\n      return this.renderLoading()\n    }\n\n    return (\n      <Item.Group>\n        {this.state.blogs.map((blog, key) => (\n          <BlogItem\n            blog={blog}\n            key={key}\n            myBlog\n            deleteBlog={(blogId: string) => this.handleDeleteBlog(blogId)}\n          />\n        ))}\n      </Item.Group>\n    )\n  }\n  renderLoading() {\n    return (\n      <Grid.Row>\n        <Loader indeterminate active inline=\"centered\">\n          Loading Blogs\n        </Loader>\n      </Grid.Row>\n    )\n  }\n}\n\nexport default MyBlogs\n","import * as React from 'react'\nimport { Editor } from 'react-draft-wysiwyg'\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css'\nimport {\n  ContentState,\n  convertFromRaw,\n  convertToRaw,\n  EditorState\n} from 'draft-js'\nimport {\n  Container,\n  Form,\n  Button,\n  Header,\n  Message,\n  Grid,\n  Loader\n} from 'semantic-ui-react'\nimport Auth from '../auth/Auth'\nimport { RouteComponentProps } from 'react-router-dom'\nimport {\n  getMyBlog,\n  getUpdateImageUrl,\n  updateBlog,\n  updateBlogImage\n} from '../api/blogs'\n\nexport interface EditBlogProps extends RouteComponentProps<{ blogId: string }> {\n  auth: Auth\n}\nexport interface EditBlogState {\n  editorState?: EditorState\n  heading: string\n  description: string\n  authorName: string\n  timeToRead: number\n  imageFile?: File\n  error: string\n  success: string\n  loadingBlog: boolean\n  loadingMessage: string\n  updateImageUrl?: string\n}\n\nclass EditBlog extends React.Component<EditBlogProps, EditBlogState> {\n  state: EditBlogState = {\n    heading: '',\n    description: '',\n    authorName: '',\n    timeToRead: NaN,\n    error: '',\n    success: '',\n    loadingBlog: true,\n    loadingMessage: 'Loading Blog!'\n  }\n\n  componentDidMount = async () => {\n    const {\n      match: { params }\n    } = this.props\n\n    try {\n      const blog = await getMyBlog(this.props.auth.getIdToken(), params.blogId)\n      const updateImageUrl = await getUpdateImageUrl(\n        this.props.auth.getIdToken(),\n        params.blogId\n      )\n\n      const contentState = convertFromRaw(blog.content)\n      const editorState = EditorState.createWithContent(contentState)\n\n      this.setState({\n        ...this.state,\n        heading: blog.heading,\n        authorName: blog.authorName,\n        description: blog.description,\n        timeToRead: blog.timeToRead,\n        editorState,\n        loadingBlog: false,\n        updateImageUrl\n      })\n    } catch (e) {\n      alert(`Failed to fetch blog: ${e.message}`)\n    }\n  }\n\n  handleInputChange = (\n    event:\n      | React.ChangeEvent<HTMLInputElement>\n      | React.FormEvent<HTMLTextAreaElement>\n  ) =>\n    this.setState({\n      ...this.state,\n      [event.currentTarget.name]: event.currentTarget.value\n    })\n\n  handleFileChange = (image: File) =>\n    this.setState({ ...this.state, imageFile: image })\n\n  onEditorStateChange = (editorState: EditorState) => {\n    this.setState({\n      editorState\n    })\n  }\n\n  handleSubmit = async () => {\n    const {\n      authorName,\n      description,\n      heading,\n      timeToRead,\n      editorState,\n      imageFile,\n      updateImageUrl\n    } = this.state\n\n    if (\n      !authorName ||\n      !description ||\n      !heading ||\n      !timeToRead ||\n      !editorState\n    ) {\n      this.setState({ ...this.state, error: 'All fields are required' })\n    } else {\n      try {\n        this.setState({\n          ...this.state,\n          loadingBlog: true,\n          loadingMessage: 'Updating Blog!'\n        })\n        await updateBlog(\n          this.props.auth.getIdToken(),\n          this.props.match.params.blogId,\n          {\n            authorName,\n            description,\n            heading,\n            timeToRead,\n            content: convertToRaw(editorState.getCurrentContent())\n          }\n        )\n\n        if (imageFile) await updateBlogImage(updateImageUrl!, imageFile)\n\n        await this.setState({\n          ...this.state,\n          error: '',\n          success: 'Updated blog successfully!',\n          editorState: undefined,\n          loadingBlog: false,\n          loadingMessage: ''\n        })\n        this.props.history.push('/my-blogs')\n      } catch (ex) {\n        this.setState({\n          error: 'Network Error!',\n          success: ''\n        })\n      }\n    }\n  }\n\n  renderLoading() {\n    return (\n      <Grid.Row>\n        <Loader indeterminate active inline=\"centered\">\n          {this.state.loadingMessage}\n        </Loader>\n      </Grid.Row>\n    )\n  }\n\n  render() {\n    const { editorState } = this.state\n    if (this.state.loadingBlog) return this.renderLoading()\n    else\n      return (\n        <Container>\n          <Header\n            size=\"large\"\n            style={{ textAlign: 'center', margin: '2rem 0' }}\n          >\n            Edit Blog\n          </Header>\n          <Form size=\"large\" warning>\n            <Form.Field required>\n              <label>Heading</label>\n              <input\n                name=\"heading\"\n                value={this.state.heading}\n                onChange={this.handleInputChange}\n                placeholder=\"\"\n              />\n            </Form.Field>\n            <Form.TextArea\n              required\n              label=\"Short Description\"\n              name=\"description\"\n              placeholder=\"\"\n              value={this.state.description}\n              onChange={this.handleInputChange}\n            />\n            <Form.Field required>\n              <label>Author Name</label>\n              <input\n                value={this.state.authorName}\n                name=\"authorName\"\n                placeholder=\"\"\n                onChange={this.handleInputChange}\n              />\n            </Form.Field>\n            <Form.Field required>\n              <label>Time To Read (in minutes)</label>\n              <input\n                type=\"number\"\n                value={this.state.timeToRead}\n                name=\"timeToRead\"\n                placeholder=\"\"\n                onChange={this.handleInputChange}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Image</label>\n              <div style={{ display: 'flex', alignItems: 'center' }}>\n                <Button\n                  as=\"label\"\n                  style={{ width: 'fit-content' }}\n                  htmlFor=\"file\"\n                  type=\"button\"\n                >\n                  Change Image\n                </Button>\n                <p>{this.state.imageFile?.name}</p>\n              </div>\n\n              <input\n                type=\"file\"\n                id=\"file\"\n                style={{ display: 'none' }}\n                onChange={({ currentTarget }) =>\n                  this.handleFileChange(currentTarget.files![0])\n                }\n              />\n            </Form.Field>\n            <Form.Field required>\n              <label>Write Blog</label>\n              <Editor\n                editorState={editorState}\n                toolbarClassName=\"toolbarClassName\"\n                wrapperClassName=\"wrapperClassName\"\n                editorClassName=\"editorClassName\"\n                onEditorStateChange={this.onEditorStateChange}\n                editorStyle={{\n                  border: '1px solid #F1F1F1',\n                  minHeight: '10rem',\n                  padding: '0 1rem'\n                }}\n              />\n            </Form.Field>\n            <Message\n              warning\n              header={this.state.error ? 'Error' : 'Success'}\n              error={!!this.state.error}\n              success={!!this.state.success}\n              hidden={!this.state.error && !this.state.success}\n              list={[this.state.error ? this.state.error : this.state.success]}\n            />\n            <Form.Button type=\"submit\" onClick={this.handleSubmit}>\n              Submit\n            </Form.Button>\n          </Form>\n        </Container>\n      )\n  }\n}\n\nexport default EditBlog\n","import * as React from 'react'\nimport Auth from '../auth/Auth'\nimport {\n  Container,\n  Form,\n  Button,\n  Header,\n  Message,\n  Grid,\n  Loader\n} from 'semantic-ui-react'\nimport { Editor } from 'react-draft-wysiwyg'\nimport { convertToRaw, EditorState, RawDraftContentState } from 'draft-js'\nimport draftToHtml from 'draftjs-to-html'\nimport { createBlog } from '../api/blogs'\n\nexport interface NewBlogProps {\n  auth: Auth\n  history: any\n}\n\nexport interface NewBlogState {\n  editorState?: EditorState\n  heading: string\n  description: string\n  authorName: string\n  timeToRead?: number\n  imageFile?: File\n  error: string\n  success: string\n  loading: boolean\n}\n\nclass NewBlog extends React.Component<NewBlogProps, NewBlogState> {\n  state: NewBlogState = {\n    heading: '',\n    description: '',\n    authorName: '',\n    timeToRead: undefined,\n    error: '',\n    success: '',\n    loading: false\n  }\n\n  handleInputChange = (\n    event:\n      | React.ChangeEvent<HTMLInputElement>\n      | React.FormEvent<HTMLTextAreaElement>\n  ) =>\n    this.setState({\n      ...this.state,\n      [event.currentTarget.name]: event.currentTarget.value\n    })\n\n  handleFileChange = (image: File) =>\n    this.setState({ ...this.state, imageFile: image })\n\n  onEditorStateChange = (editorState: EditorState) => {\n    this.setState({\n      editorState\n    })\n  }\n\n  handleSubmit = async () => {\n    const {\n      authorName,\n      description,\n      heading,\n      timeToRead,\n      editorState,\n      imageFile\n    } = this.state\n\n    if (\n      !authorName ||\n      !description ||\n      !heading ||\n      !timeToRead ||\n      !editorState ||\n      !imageFile\n    ) {\n      this.setState({ ...this.state, error: 'All fields are required' })\n    } else {\n      this.setState({ ...this.state, loading: true })\n      try {\n        await createBlog(\n          this.props.auth.getIdToken(),\n          {\n            authorName,\n            description,\n            heading,\n            timeToRead,\n            content: convertToRaw(editorState.getCurrentContent())\n          },\n          imageFile\n        )\n        await this.setState({\n          ...this.state,\n          heading: '',\n          description: '',\n          authorName: '',\n          timeToRead: undefined,\n          error: '',\n          success: 'Created blog successfully!',\n          editorState: undefined,\n          imageFile: undefined\n        })\n\n        this.props.history.push('/my-blogs')\n      } catch (ex) {\n        this.setState({\n          ...this.state,\n          error: 'Network Error!',\n          success: ''\n        })\n      }\n    }\n  }\n  renderLoading() {\n    return (\n      <Grid.Row>\n        <Loader indeterminate active inline=\"centered\">\n          Creating Blog!\n        </Loader>\n      </Grid.Row>\n    )\n  }\n\n  render() {\n    const { editorState } = this.state\n    if (this.state.loading) return this.renderLoading()\n    else\n      return (\n        <Container>\n          <Header\n            size=\"large\"\n            style={{ textAlign: 'center', margin: '2rem 0' }}\n          >\n            New Blog\n          </Header>\n          <Form size=\"large\" warning>\n            <Form.Field required>\n              <label>Heading</label>\n              <input\n                name=\"heading\"\n                value={this.state.heading}\n                onChange={this.handleInputChange}\n                placeholder=\"\"\n              />\n            </Form.Field>\n            <Form.TextArea\n              required\n              label=\"Short Description\"\n              name=\"description\"\n              placeholder=\"\"\n              value={this.state.description}\n              onChange={this.handleInputChange}\n            />\n            <Form.Field required>\n              <label>Author Name</label>\n              <input\n                value={this.state.authorName}\n                name=\"authorName\"\n                placeholder=\"\"\n                onChange={this.handleInputChange}\n              />\n            </Form.Field>\n            <Form.Field required>\n              <label>Time To Read (in minutes)</label>\n              <input\n                type=\"number\"\n                value={this.state.timeToRead}\n                name=\"timeToRead\"\n                placeholder=\"\"\n                onChange={this.handleInputChange}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Image</label>\n              <div style={{ display: 'flex', alignItems: 'center' }}>\n                <Button\n                  as=\"label\"\n                  style={{ width: 'fit-content' }}\n                  htmlFor=\"file\"\n                  type=\"button\"\n                >\n                  Upload Image\n                </Button>\n                <p>{this.state.imageFile?.name}</p>\n              </div>\n\n              <input\n                type=\"file\"\n                id=\"file\"\n                style={{ display: 'none' }}\n                onChange={({ currentTarget }) =>\n                  this.handleFileChange(currentTarget.files![0])\n                }\n              />\n            </Form.Field>\n            <Form.Field required>\n              <label>Write Blog</label>\n              <Editor\n                editorState={editorState}\n                toolbarClassName=\"toolbarClassName\"\n                wrapperClassName=\"wrapperClassName\"\n                editorClassName=\"editorClassName\"\n                onEditorStateChange={this.onEditorStateChange}\n                editorStyle={{\n                  border: '1px solid #F1F1F1',\n                  minHeight: '10rem',\n                  padding: '0 1rem'\n                }}\n              />\n            </Form.Field>\n            <Message\n              warning\n              header={this.state.error ? 'Error' : 'Success'}\n              error={!!this.state.error}\n              success={!!this.state.success}\n              hidden={!this.state.error && !this.state.success}\n              list={[this.state.error ? this.state.error : this.state.success]}\n            />\n            <Form.Button type=\"submit\" onClick={this.handleSubmit}>\n              Submit\n            </Form.Button>\n          </Form>\n        </Container>\n      )\n  }\n}\n\nexport default NewBlog\n","import * as React from 'react'\nimport Auth from '../auth/Auth'\nimport { History } from 'history'\nimport { Blog } from '../types/Blog'\nimport { deleteMyBlog, getBlog, getMyBlog } from '../api/blogs'\nimport { RouteComponentProps } from 'react-router-dom'\nimport {\n  Header,\n  Container,\n  Grid,\n  Loader,\n  Button,\n  Image\n} from 'semantic-ui-react'\nimport ReactHtmlParser from 'react-html-parser'\nimport draftToHtml from 'draftjs-to-html'\n\nexport interface BlogViewProps extends RouteComponentProps<{ blogId: string }> {\n  auth: Auth\n  userBlog?: boolean\n}\n\nexport interface BlogViewState {\n  blog?: Blog\n  loadingBlog: boolean\n}\n\nclass BlogView extends React.Component<BlogViewProps, BlogViewState> {\n  state: BlogViewState = { loadingBlog: true }\n\n  async componentDidMount() {\n    const {\n      match: { params }\n    } = this.props\n\n    let blog: Blog\n    try {\n      if (this.props.userBlog)\n        blog = await getMyBlog(this.props.auth.getIdToken(), params.blogId)\n      else blog = await getBlog(this.props.auth.getIdToken(), params.blogId)\n\n      this.setState({\n        blog,\n        loadingBlog: false\n      })\n    } catch (e) {\n      alert(`Failed to fetch blog: ${e.message}`)\n    }\n  }\n\n  render() {\n    return <Container> {this.renderBlog()}</Container>\n  }\n\n  async handleDeleteBlog(blogId: string) {\n    try {\n      await deleteMyBlog(this.props.auth.getIdToken(), blogId)\n      this.props.history.push('/my-blogs')\n    } catch (ex) {\n      alert(ex)\n    }\n  }\n\n  renderBlog() {\n    if (this.state.loadingBlog) {\n      return this.renderLoading()\n    }\n    const { blog } = this.state\n    const updatedAt = new Date(blog!.updatedAt).toLocaleString(undefined, {\n      timeStyle: 'short',\n      dateStyle: 'full'\n    })\n    // const updatedTime = `${updatedAt.getHours()} : ${updatedAt.getMinutes()}`\n\n    return (\n      <Container style={{ marginTop: '4rem' }}>\n        <Header size=\"huge\">{blog?.heading}</Header>\n        <Header\n          size=\"medium\"\n          style={{ fontWeight: 500, marginTop: 0, marginBottom: '0.5rem' }}\n        >\n          {blog?.description}\n        </Header>\n        <div style={{ display: 'flex', flexWrap: 'wrap', margin: '1rem 0' }}>\n          <span>By {blog?.authorName}</span>\n          <span style={{ padding: '0 0.5rem' }}>•</span>\n          <span>{blog?.timeToRead} min read</span>\n          <span style={{ padding: '0 0.5rem' }}>•</span>\n          <span>Updated {updatedAt}</span>\n        </div>\n\n        {this.props.userBlog && (\n          <div style={{ margin: '1rem 0' }}>\n            <Button\n              onClick={(event) => {\n                event.stopPropagation()\n                this.props.history.push(`/my-blogs/edit/${blog!.blogId}`)\n              }}\n            >\n              EDIT BLOG\n            </Button>\n\n            <Button\n              color=\"red\"\n              onClick={async (event) => {\n                event.stopPropagation()\n                await this.handleDeleteBlog(blog!.blogId)\n              }}\n            >\n              DELETE BLOG\n            </Button>\n          </div>\n        )}\n\n        <Image\n          src={blog?.imageUrl}\n          size=\"large\"\n          fluid\n          centered\n          className=\"blog-view-image\"\n          style={{\n            width: '100% ',\n            objectFit: 'cover',\n            height: '40rem',\n            marginBottom: '2rem'\n          }}\n        />\n\n        <>{ReactHtmlParser(draftToHtml(blog!.content))}</>\n      </Container>\n    )\n  }\n\n  renderLoading() {\n    return (\n      <Grid.Row>\n        <Loader indeterminate active inline=\"centered\">\n          Loading Blog\n        </Loader>\n      </Grid.Row>\n    )\n  }\n}\n\nexport default BlogView\n","import React, { Component } from 'react'\nimport { Route, Router, Switch, NavLink, Redirect } from 'react-router-dom'\nimport { Menu, Segment, Container } from 'semantic-ui-react'\n\nimport Auth from './auth/Auth'\nimport { LogIn } from './components/LogIn'\nimport { NotFound } from './components/NotFound'\nimport Blogs from './components/Blogs'\nimport MyBlogs from './components/MyBlogs'\nimport EditBlog from './components/EditBlog'\nimport NewBlog from './components/NewBlog'\nimport './App.css'\nimport BlogView from './components/BlogView'\n\nexport interface AppProps {}\n\nexport interface AppProps {\n  auth: Auth\n  history: any\n}\n\nexport interface AppState {}\n\nexport default class App extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props)\n\n    this.handleLogin = this.handleLogin.bind(this)\n    this.handleLogout = this.handleLogout.bind(this)\n  }\n\n  handleLogin() {\n    this.props.auth.login()\n  }\n\n  handleLogout() {\n    this.props.auth.logout()\n  }\n\n  render() {\n    return (\n      <div>\n        <Router history={this.props.history}>\n          {this.generateMenu()}\n\n          {this.generateCurrentPage()}\n        </Router>\n      </div>\n    )\n  }\n\n  generateMenu() {\n    return (\n      <Segment inverted style={{ borderRadius: 0 }}>\n        <Menu inverted secondary>\n          <NavLink to=\"/\" exact activeClassName=\"active\" className=\"item\">\n            HOME\n          </NavLink>\n          {/* <NavLink to=\"/blogs\" activeClassName=\"active\" className=\"item\">\n            BLOGS\n          </NavLink> */}\n          {!this.props.auth.isAuthenticated() && (\n            <Menu.Menu position=\"right\">\n              <Menu.Item name=\"SIGN IN\" onClick={this.handleLogin} />\n            </Menu.Menu>\n          )}\n          {this.props.auth.isAuthenticated() && (\n            <Menu.Menu position=\"right\">\n              <NavLink\n                to=\"/blogs/new\"\n                activeClassName=\"active\"\n                className=\"item\"\n              >\n                NEW BLOG\n              </NavLink>\n              <NavLink to=\"/my-blogs\" activeClassName=\"active\" className=\"item\">\n                MY BLOGS\n              </NavLink>\n              <Menu.Item name=\"SIGN OUT\" onClick={this.handleLogout} />\n            </Menu.Menu>\n          )}\n        </Menu>\n      </Segment>\n    )\n  }\n\n  logInLogOutButton() {\n    if (this.props.auth.isAuthenticated()) {\n      return (\n        <Menu.Item name=\"logout\" onClick={this.handleLogout}>\n          Log Out\n        </Menu.Item>\n      )\n    } else {\n      return (\n        <Menu.Item name=\"login\" onClick={this.handleLogin}>\n          Log In\n        </Menu.Item>\n      )\n    }\n  }\n\n  generateCurrentPage() {\n    if (!this.props.auth.isAuthenticated()) {\n      return <LogIn auth={this.props.auth} />\n    }\n\n    return (\n      <Container style={{ paddingBottom: '2rem' }}>\n        <Switch>\n          <Route\n            path=\"/blogs/new\"\n            exact\n            render={(props) => {\n              return <NewBlog {...props} auth={this.props.auth} />\n            }}\n          />\n          <Route\n            path=\"/my-blogs/edit/:blogId\"\n            exact\n            render={(props) => {\n              return <EditBlog {...props} auth={this.props.auth} />\n            }}\n          />\n          <Route\n            path=\"/my-blogs/:blogId\"\n            exact\n            render={(props) => {\n              return <BlogView {...props} auth={this.props.auth} userBlog />\n            }}\n          />\n          <Route\n            path=\"/my-blogs\"\n            exact\n            render={(props) => {\n              return <MyBlogs {...props} auth={this.props.auth} />\n            }}\n          />\n\n          <Route\n            path=\"/blogs/:blogId\"\n            exact\n            render={(props) => {\n              return <BlogView {...props} auth={this.props.auth} />\n            }}\n          />\n          <Redirect path=\"/blogs\" to=\"/\" />\n          <Route\n            path=\"/\"\n            exact\n            render={(props) => {\n              return <Blogs {...props} auth={this.props.auth} />\n            }}\n          />\n          <Route component={NotFound} />\n        </Switch>\n      </Container>\n    )\n  }\n}\n","import React from 'react'\r\nimport Auth from './auth/Auth'\r\nimport { Router, Route } from 'react-router-dom'\r\nimport Callback from './components/Callback'\r\nimport createHistory from 'history/createBrowserHistory'\r\nimport App from './App';\r\nconst history = createHistory()\r\n\r\nconst auth = new Auth(history)\r\n\r\nconst handleAuthentication = (props: any) => {\r\n  const location = props.location\r\n  if (/access_token|id_token|error/.test(location.hash)) {\r\n    auth.handleAuthentication()\r\n  }\r\n}\r\n\r\nexport const makeAuthRouting = () => {\r\n  return (\r\n    <Router history={history}>\r\n      <div>\r\n        <Route\r\n          path=\"/callback\"\r\n          render={props => {\r\n            handleAuthentication(props)\r\n            return <Callback />\r\n          }}\r\n        />\r\n        <Route\r\n          render={props => {\r\n            return <App auth={auth} {...props} />\r\n          }}\r\n        />\r\n      </div>\r\n    </Router>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport { makeAuthRouting } from './routing';\r\n\r\nReactDOM.render(makeAuthRouting(), document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}